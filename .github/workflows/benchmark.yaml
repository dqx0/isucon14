name: Benchmark Test

on:
  push:
    branches: [ main, dev ]

jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo mysql -e "CREATE DATABASE isuride;"
          sudo mysql -e "CREATE USER 'isucon'@'localhost' IDENTIFIED BY 'isucon';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON isuride.* TO 'isucon'@'localhost';"
      
      - name: Start Go server
        run: |
          cd webapp/go
          go mod download
          nohup go run ./... > server.log 2>&1 &
          echo $! > server.pid
          sleep 10  # サーバー起動待機
        env:
          ISUCON_DB_HOST: localhost
          ISUCON_DB_PORT: 3306
          ISUCON_DB_USER: isucon
          ISUCON_DB_PASSWORD: isucon
          ISUCON_DB_NAME: isuride
      
      - name: Wait for server to be ready
        run: |
          timeout 60 bash -c 'until curl -s http://localhost:8080/api/initialize; do sleep 2; done'
      
      - name: Start matching trigger
        run: |
          nohup bash -c 'while true; do curl -s http://localhost:8080/api/internal/matching; sleep 3; done' > matching.log 2>&1 &
          echo $! > matching.pid
      
      - name: Build benchmark tool
        run: |
          cd bench
          go build -buildvcs=false -ldflags "-s -w" -o bench .
      
      - name: Run benchmark
        run: |
          cd bench
          timeout 300 ./bench run . run \
            --addr localhost:443 \
            --target https://isuride.xiv.isucon.net \
            --payment-url http://localhost:12346 \
            --payment-bind-port 12346 \
          || echo "Benchmark completed or timed out"
      
      - name: Cleanup
        if: always()
        run: |
          # プロセス終了
          if [ -f webapp/go/server.pid ]; then
            kill $(cat webapp/go/server.pid) || true
          fi
          if [ -f matching.pid ]; then
            kill $(cat matching.pid) || true
          fi
          # ログ出力
          echo "=== Server Log ==="
          cat webapp/go/server.log || true
          echo "=== Matching Log ==="
          cat matching.log || true
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-logs
          path: |
            webapp/go/server.log
            matching.log
