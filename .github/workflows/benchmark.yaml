name: Benchmark Test

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'webapp/go/**'
      - 'bench/**'
      - 'webapp/sql/**'
      - '!**/*.md'
      - '!**/*.txt'

jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y mysql-server

            # MySQLサービスを開始
            sudo systemctl start mysql

            MYSQL_DEBIAN_USERNAME=$(sudo grep -P '^user\s*=' /etc/mysql/debian.cnf | head -1 | awk '{print $3}')
            MYSQL_DEBIAN_PASSWORD=$(sudo grep -P '^password\s*=' /etc/mysql/debian.cnf | head -1 | awk '{print $3}')

            mysql -u $MYSQL_DEBIAN_USERNAME -p$MYSQL_DEBIAN_PASSWORD -e "CREATE DATABASE IF NOT EXISTS isuride;"
            mysql -u $MYSQL_DEBIAN_USERNAME -p$MYSQL_DEBIAN_PASSWORD -e "CREATE USER IF NOT EXISTS 'isucon'@'localhost' IDENTIFIED BY 'isucon';"
            mysql -u $MYSQL_DEBIAN_USERNAME -p$MYSQL_DEBIAN_PASSWORD -e "GRANT ALL PRIVILEGES ON isuride.* TO 'isucon'@'localhost';"
            mysql -u $MYSQL_DEBIAN_USERNAME -p$MYSQL_DEBIAN_PASSWORD -e "FLUSH PRIVILEGES;"
            
            # 接続テスト
            mysql -u isucon -pisucon -e "SELECT 1;" || echo "MySQL connection test failed"
      
      - name: Initialize database
        run: |
          # データベース初期化スクリプトがある場合
          if [ -f webapp/sql/init.sql ]; then
            mysql -u isucon -pisucon isuride < webapp/sql/init.sql
          fi
          if [ -f webapp/sql/0_Schema.sql ]; then
            mysql -u isucon -pisucon isuride < webapp/sql/0_Schema.sql
          fi
          if [ -f webapp/sql/1_DummyUserData.sql ]; then
            mysql -u isucon -pisucon isuride < webapp/sql/1_DummyUserData.sql
          fi
      
      - name: Start Go server
        run: |
          cd webapp/go
          go mod download
          nohup go run ./... > server.log 2>&1 &
          echo $! > server.pid
          sleep 15
        env:
          ISUCON_DB_HOST: localhost
          ISUCON_DB_PORT: 3306
          ISUCON_DB_USER: isucon
          ISUCON_DB_PASSWORD: isucon
          ISUCON_DB_NAME: isuride
      
      - name: Wait for server to be ready
        run: |
          timeout 60 bash -c 'until curl -s http://localhost:8080/api/initialize; do echo "Waiting for server..."; sleep 2; done' || echo "Server not ready"
      
      - name: Initialize application
        run: |
          curl -X POST http://localhost:8080/api/initialize || echo "Initialize failed"
      
      - name: Start matching trigger
        run: |
          nohup bash -c 'while true; do curl -s http://localhost:8080/api/internal/matching; sleep 3; done' > matching.log 2>&1 &
          echo $! > matching.pid
      
      - name: Build benchmark tool
        run: |
          cd bench
          go build -buildvcs=false -ldflags "-s -w" -o bench .
      
      - name: Run benchmark
        run: |
          cd bench
          timeout 300 ./bench run . run \
            --addr localhost:8080 \
            --target http://localhost:8080 \
            --payment-url http://localhost:12346 \
            --payment-bind-port 12346 \
          || echo "Benchmark completed or timed out"
      
      - name: Cleanup
        if: always()
        run: |
          if [ -f webapp/go/server.pid ]; then
            kill $(cat webapp/go/server.pid) || true
          fi
          if [ -f matching.pid ]; then
            kill $(cat matching.pid) || true
          fi
          echo "=== Server Log ==="
          cat webapp/go/server.log || true
          echo "=== Matching Log ==="
          cat matching.log || true
